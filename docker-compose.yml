version: '3.8'
services:
  db:
    image: postgres:14.1-alpine
    restart: always
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    ports:
      - '5432:5432'
    volumes:
      - db:/var/lib/postgresql/data

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"

  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    expose:
      - "29092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,PLAINTEXT_HOST://kafka:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  init-kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - kafka
    entrypoint: [ '/bin/sh', '-c' ]
    command: |
      "
      # blocks until kafka is reachable
      kafka-topics --bootstrap-server kafka:29092 --list
      
      echo -e 'Creating order-request topic'
      kafka-topics --bootstrap-server kafka:29092 --create --if-not-exists --topic order-request --replication-factor 1 --partitions 4
      
      echo -e 'Creating items-reserved topic'
      kafka-topics --bootstrap-server kafka:29092 --create --if-not-exists --topic order-items-reserved --replication-factor 1 --partitions 4
          
      echo -e 'Creating order-results topic'
      kafka-topics --bootstrap-server kafka:29092 --create --if-not-exists --topic order-results  --replication-factor 1 --partitions 4
                
      echo -e 'Creating order-failed topic'
      kafka-topics --bootstrap-server kafka:29092 --create --if-not-exists --topic order-failed  --replication-factor 1 --partitions 4
                      
      echo -e 'Creating payment-completed topic'
      kafka-topics --bootstrap-server kafka:29092 --create --if-not-exists --topic payment-completed --replication-factor 1 --partitions 4
      
      echo -e 'Successfully created the following topics:'
      kafka-topics --bootstrap-server kafka:29092 --list
      "

  orders-service:
    depends_on:
      - kafka
    build:
      context: ./orders-service
      dockerfile: ./dockerfile
    environment:
      - APPLICATION_MODE=0
      - SERVER_HOST=0.0.0.0
      - SERVER_PORT=8080
      - KAFKA_URL=kafka:29092
    ports:
      - '8080:8080'

  products-service:
    depends_on:
      - kafka
      - db
    build:
      context: ./products-service
      dockerfile: ./dockerfile
    environment:
      - APPLICATION_MODE=0
      - SERVER_HOST=0.0.0.0
      - SERVER_PORT=8081
      - DB_HOST=db
      - KAFKA_URL=kafka:29092
    ports:
      - '8081:8081'

  payments-service:
    depends_on:
      - kafka
      - db
    build:
      context: ./payments-service
      dockerfile: ./dockerfile
    environment:
      - APPLICATION_MODE=0
      - SERVER_HOST=0.0.0.0
      - SERVER_PORT=8082
      - DB_HOST=db
      - KAFKA_URL=kafka:29092
    ports:
      - '8082:8082'

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin4_container
    restart: always
    ports:
      - "8888:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: root@root.com
      PGADMIN_DEFAULT_PASSWORD: root
    volumes:
      - pgadmin:/var/lib/pgadmin
volumes:
  pgadmin:
  db:
    driver: local